{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheesha Weerakoon\\\\Documents\\\\GitHub\\\\spicesense\\\\front-end\\\\src\\\\components\\\\OrderList.js\",\n  _s = $RefreshSig$();\n// OrdersList.js\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrdersList({\n  userId\n}) {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [items, setItems] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [newCard, setNewCard] = useState({\n    cardNumber: \"\",\n    cardHolder: \"\",\n    expiryDate: \"\",\n    cvv: \"\"\n  });\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [currentOrder, setCurrentOrder] = useState(null);\n\n  // Fetch orders\n  useEffect(() => {\n    const fetchOrders = async () => {\n      if (!userId) return;\n      try {\n        const response = await axios.get(`http://localhost:5000/api/orders/${userId}`);\n        setOrders(response.data);\n      } catch (error) {\n        console.error(\"Error fetching orders\", error);\n      }\n    };\n    fetchOrders();\n  }, [userId]);\n\n  // Fetch items\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/items\");\n        const itemsMap = response.data.reduce((acc, item) => {\n          acc[item._id] = item.name;\n          return acc;\n        }, {});\n        setItems(itemsMap);\n      } catch (error) {\n        console.error(\"Error fetching items\", error);\n      }\n    };\n    fetchItems();\n  }, []);\n\n  // Fetch user's credit cards when opening payment modal\n  const fetchCreditCards = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/credit-cards/${userId}`);\n      setCards(response.data);\n    } catch (error) {\n      console.error(\"Error fetching credit cards\", error);\n    }\n  };\n\n  // Open payment modal\n  const openPaymentModal = order => {\n    setCurrentOrder(order);\n    setShowPaymentModal(true);\n    fetchCreditCards();\n  };\n\n  // Handle new card input\n  const handleNewCardChange = e => {\n    setNewCard({\n      ...newCard,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle payment\n\n  // OrdersList.js (only showing handlePayment for brevity)\n  const handlePayment = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      let paymentData = {\n        userId,\n        orderId: currentOrder._id,\n        amount: currentOrder.total\n      };\n      if (selectedCard) {\n        paymentData.cardId = selectedCard._id;\n      } else if (newCard.cardNumber) {\n        const cardResponse = await axios.post(\"http://localhost:5000/api/credit-cards\", {\n          userId,\n          ...newCard\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        paymentData.cardId = cardResponse.data._id;\n      } else {\n        alert(\"Please select a card or enter new card details.\");\n        return;\n      }\n      console.log(\"Sending payment data:\", paymentData);\n      const paymentResponse = await axios.post(\"http://localhost:5000/api/payments\", paymentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Payment response:\", paymentResponse.data);\n\n      // Update order status immediately after payment success\n      setOrders(orders.map(order => order._id === currentOrder._id ? {\n        ...order,\n        status: \"paid\"\n      } : order));\n      setShowPaymentModal(false);\n      setSelectedCard(null);\n      setNewCard({\n        cardNumber: \"\",\n        cardHolder: \"\",\n        expiryDate: \"\",\n        cvv: \"\"\n      });\n\n      // Fetch and download invoice (separate try/catch to isolate failure)\n      try {\n        console.log(\"Fetching invoice for paymentId:\", paymentResponse.data.paymentId);\n        const invoiceResponse = await axios.get(`http://localhost:5000/api/payments/invoice/${paymentResponse.data.paymentId}`, {\n          responseType: \"blob\"\n        });\n        console.log(\"Invoice response received\");\n        const url = window.URL.createObjectURL(new Blob([invoiceResponse.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", `invoice-${paymentResponse.data.paymentId}.pdf`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      } catch (invoiceError) {\n        console.error(\"Invoice download failed:\", invoiceError.response ? invoiceError.response.data : invoiceError.message);\n        alert(\"Payment succeeded, but invoice download failed. Please try downloading it manually from your order history.\");\n      }\n      alert(\"Payment Successful\");\n    } catch (error) {\n      console.error(\"Payment failed with error:\", error.response ? error.response.data : error.message);\n      alert(\"Payment failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), orders.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [items[item.itemId] || \"Loading...\", \" - \", item.quantity, \" pcs @ $\", item.price.toFixed(2)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", order.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status === \"pending\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openPaymentModal(order),\n              children: \"Pay Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2705 Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), showPaymentModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalContentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Pay for Order #\", currentOrder._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: $\", currentOrder.total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select a Saved Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), cards.length > 0 ? cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"card\",\n            value: card._id,\n            onChange: () => setSelectedCard(card)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this), \"**** **** **** \", card.cardNumber.slice(-4), \" (\", card.cardHolder, \")\"]\n        }, card._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No saved cards found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Or Enter New Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cardNumber\",\n          placeholder: \"Card Number\",\n          value: newCard.cardNumber,\n          onChange: handleNewCardChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cardHolder\",\n          placeholder: \"Card Holder Name\",\n          value: newCard.cardHolder,\n          onChange: handleNewCardChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"expiryDate\",\n          placeholder: \"Expiry Date (MM/YY)\",\n          value: newCard.expiryDate,\n          onChange: handleNewCardChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cvv\",\n          placeholder: \"CVV\",\n          value: newCard.cvv,\n          onChange: handleNewCardChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePayment,\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPaymentModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n// Basic inline styles for the modal\n_s(OrdersList, \"cGr0u3TEzFU7sT/LS0op/GChDtQ=\");\n_c = OrdersList;\nconst modalStyle = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  background: \"rgba(0, 0, 0, 0.5)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst modalContentStyle = {\n  background: \"white\",\n  padding: \"20px\",\n  borderRadius: \"5px\",\n  width: \"400px\"\n};\nexport default OrdersList;\nvar _c;\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","OrdersList","userId","_s","orders","setOrders","items","setItems","cards","setCards","selectedCard","setSelectedCard","newCard","setNewCard","cardNumber","cardHolder","expiryDate","cvv","showPaymentModal","setShowPaymentModal","currentOrder","setCurrentOrder","fetchOrders","response","get","data","error","console","fetchItems","itemsMap","reduce","acc","item","_id","name","fetchCreditCards","openPaymentModal","order","handleNewCardChange","e","target","value","handlePayment","token","localStorage","getItem","paymentData","orderId","amount","total","cardId","cardResponse","post","headers","Authorization","alert","log","paymentResponse","map","status","paymentId","invoiceResponse","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","invoiceError","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","cellPadding","index","itemId","quantity","price","toFixed","onClick","style","modalStyle","modalContentStyle","card","type","onChange","slice","placeholder","_c","position","top","left","width","height","background","display","justifyContent","alignItems","padding","borderRadius","$RefreshReg$"],"sources":["C:/Users/Matheesha Weerakoon/Documents/GitHub/spicesense/front-end/src/components/OrderList.js"],"sourcesContent":["// OrdersList.js\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction OrdersList({ userId }) {\r\n  const [orders, setOrders] = useState([]);\r\n  const [items, setItems] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [newCard, setNewCard] = useState({ cardNumber: \"\", cardHolder: \"\", expiryDate: \"\", cvv: \"\" });\r\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n  const [currentOrder, setCurrentOrder] = useState(null);\r\n\r\n  // Fetch orders\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      if (!userId) return;\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/orders/${userId}`);\r\n        setOrders(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching orders\", error);\r\n      }\r\n    };\r\n    fetchOrders();\r\n  }, [userId]);\r\n\r\n  // Fetch items\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/items\");\r\n        const itemsMap = response.data.reduce((acc, item) => {\r\n          acc[item._id] = item.name;\r\n          return acc;\r\n        }, {});\r\n        setItems(itemsMap);\r\n      } catch (error) {\r\n        console.error(\"Error fetching items\", error);\r\n      }\r\n    };\r\n    fetchItems();\r\n  }, []);\r\n\r\n  // Fetch user's credit cards when opening payment modal\r\n  const fetchCreditCards = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/credit-cards/${userId}`);\r\n      setCards(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching credit cards\", error);\r\n    }\r\n  };\r\n\r\n  // Open payment modal\r\n  const openPaymentModal = (order) => {\r\n    setCurrentOrder(order);\r\n    setShowPaymentModal(true);\r\n    fetchCreditCards();\r\n  };\r\n\r\n  // Handle new card input\r\n  const handleNewCardChange = (e) => {\r\n    setNewCard({ ...newCard, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle payment\r\n\r\n// OrdersList.js (only showing handlePayment for brevity)\r\nconst handlePayment = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    let paymentData = {\r\n      userId,\r\n      orderId: currentOrder._id,\r\n      amount: currentOrder.total,\r\n    };\r\n\r\n    if (selectedCard) {\r\n      paymentData.cardId = selectedCard._id;\r\n    } else if (newCard.cardNumber) {\r\n      const cardResponse = await axios.post(\r\n        \"http://localhost:5000/api/credit-cards\",\r\n        { userId, ...newCard },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      paymentData.cardId = cardResponse.data._id;\r\n    } else {\r\n      alert(\"Please select a card or enter new card details.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Sending payment data:\", paymentData);\r\n    const paymentResponse = await axios.post(\r\n      \"http://localhost:5000/api/payments\",\r\n      paymentData,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    console.log(\"Payment response:\", paymentResponse.data);\r\n\r\n    // Update order status immediately after payment success\r\n    setOrders(\r\n      orders.map((order) =>\r\n        order._id === currentOrder._id ? { ...order, status: \"paid\" } : order\r\n      )\r\n    );\r\n    setShowPaymentModal(false);\r\n    setSelectedCard(null);\r\n    setNewCard({ cardNumber: \"\", cardHolder: \"\", expiryDate: \"\", cvv: \"\" });\r\n\r\n    // Fetch and download invoice (separate try/catch to isolate failure)\r\n    try {\r\n      console.log(\"Fetching invoice for paymentId:\", paymentResponse.data.paymentId);\r\n      const invoiceResponse = await axios.get(\r\n        `http://localhost:5000/api/payments/invoice/${paymentResponse.data.paymentId}`,\r\n        { responseType: \"blob\" }\r\n      );\r\n      console.log(\"Invoice response received\");\r\n      const url = window.URL.createObjectURL(new Blob([invoiceResponse.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", `invoice-${paymentResponse.data.paymentId}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (invoiceError) {\r\n      console.error(\"Invoice download failed:\", invoiceError.response ? invoiceError.response.data : invoiceError.message);\r\n      alert(\"Payment succeeded, but invoice download failed. Please try downloading it manually from your order history.\");\r\n    }\r\n\r\n    alert(\"Payment Successful\");\r\n  } catch (error) {\r\n    console.error(\"Payment failed with error:\", error.response ? error.response.data : error.message);\r\n    alert(\"Payment failed. Please try again.\");\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Orders</h2>\r\n      {orders.length > 0 ? (\r\n        <table border=\"1\" cellPadding=\"10\">\r\n          <thead>\r\n            <tr>\r\n              <th>Order ID</th>\r\n              <th>Items</th>\r\n              <th>Total</th>\r\n              <th>Status</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>\r\n                  {order.items.map((item, index) => (\r\n                    <div key={index}>\r\n                      {items[item.itemId] || \"Loading...\"} - {item.quantity} pcs @ $\r\n                      {item.price.toFixed(2)}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n                <td>${order.total.toFixed(2)}</td>\r\n                <td>{order.status}</td>\r\n                <td>\r\n                  {order.status === \"pending\" ? (\r\n                    <button onClick={() => openPaymentModal(order)}>Pay Now</button>\r\n                  ) : (\r\n                    <span>✅ Paid</span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No orders found.</p>\r\n      )}\r\n\r\n      {/* Payment Modal */}\r\n      {showPaymentModal && (\r\n        <div style={modalStyle}>\r\n          <div style={modalContentStyle}>\r\n            <h3>Pay for Order #{currentOrder._id}</h3>\r\n            <p>Total: ${currentOrder.total.toFixed(2)}</p>\r\n\r\n            <h4>Select a Saved Card</h4>\r\n            {cards.length > 0 ? (\r\n              cards.map((card) => (\r\n                <div key={card._id}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"card\"\r\n                    value={card._id}\r\n                    onChange={() => setSelectedCard(card)}\r\n                  />\r\n                  **** **** **** {card.cardNumber.slice(-4)} ({card.cardHolder})\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No saved cards found.</p>\r\n            )}\r\n\r\n            <h4>Or Enter New Card</h4>\r\n            <input\r\n              type=\"text\"\r\n              name=\"cardNumber\"\r\n              placeholder=\"Card Number\"\r\n              value={newCard.cardNumber}\r\n              onChange={handleNewCardChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"cardHolder\"\r\n              placeholder=\"Card Holder Name\"\r\n              value={newCard.cardHolder}\r\n              onChange={handleNewCardChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"expiryDate\"\r\n              placeholder=\"Expiry Date (MM/YY)\"\r\n              value={newCard.expiryDate}\r\n              onChange={handleNewCardChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"cvv\"\r\n              placeholder=\"CVV\"\r\n              value={newCard.cvv}\r\n              onChange={handleNewCardChange}\r\n            />\r\n\r\n            <button onClick={handlePayment}>Pay</button>\r\n            <button onClick={() => setShowPaymentModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Basic inline styles for the modal\r\nconst modalStyle = {\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  background: \"rgba(0, 0, 0, 0.5)\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst modalContentStyle = {\r\n  background: \"white\",\r\n  padding: \"20px\",\r\n  borderRadius: \"5px\",\r\n  width: \"400px\",\r\n};\r\n\r\nexport default OrdersList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}