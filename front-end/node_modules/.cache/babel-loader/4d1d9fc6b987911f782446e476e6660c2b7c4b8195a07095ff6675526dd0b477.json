{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\OneDrive\\\\Documents\\\\GitHub\\\\spicesense\\\\front-end\\\\src\\\\pages\\\\CreditCardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreditCardPage = () => {\n  _s();\n  const userId = sessionStorage.getItem(\"userId\");\n  const [cards, setCards] = useState([]);\n  const [formData, setFormData] = useState({\n    cardNumber: \"\",\n    cardHolder: \"\",\n    expiryDate: \"\",\n    cvv: \"\"\n  });\n  const [errors, setErrors] = useState({\n    cardNumber: \"\",\n    cardHolder: \"\",\n    expiryDate: \"\",\n    cvv: \"\"\n  });\n  const [editingCardId, setEditingCardId] = useState(null);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const API_BASE_URL = \"http://localhost:5000/api/credit-cards\";\n\n  // Fetch user's credit cards\n  useEffect(() => {\n    if (!userId) return;\n    fetch(`${API_BASE_URL}/${userId}`).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! Status: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => setCards(data)).catch(err => console.error(\"Error fetching credit cards:\", err));\n  }, [userId]);\n\n  // Validate form on data change\n  useEffect(() => {\n    validateForm();\n  }, [formData]);\n\n  // Validation functions\n  const validateCardNumber = number => {\n    // Remove spaces and dashes\n    const cleanNumber = number.replace(/[\\s-]/g, '');\n\n    // Check if it contains only digits\n    if (!/^\\d+$/.test(cleanNumber)) {\n      return \"Card number must contain only digits\";\n    }\n\n    // Check length (most cards are 13-19 digits)\n    if (cleanNumber.length < 13 || cleanNumber.length > 19) {\n      return \"Card number must be between 13 and 19 digits\";\n    }\n\n    // Luhn algorithm for credit card validation\n    let sum = 0;\n    let shouldDouble = false;\n\n    // Loop through values starting from the rightmost digit\n    for (let i = cleanNumber.length - 1; i >= 0; i--) {\n      let digit = parseInt(cleanNumber.charAt(i));\n      if (shouldDouble) {\n        digit *= 2;\n        if (digit > 9) {\n          digit -= 9;\n        }\n      }\n      sum += digit;\n      shouldDouble = !shouldDouble;\n    }\n\n    // If the sum is not divisible by 10, the card number is invalid\n    if (sum % 10 !== 0) {\n      return \"Invalid card number\";\n    }\n    return \"\";\n  };\n  const validateCardHolder = name => {\n    if (!name.trim()) {\n      return \"Cardholder name is required\";\n    }\n\n    // Check if name contains at least two words (first and last name)\n    const nameWords = name.trim().split(/\\s+/);\n    if (nameWords.length < 2) {\n      return \"Please enter both first and last name\";\n    }\n\n    // Check if name contains only letters and spaces\n    if (!/^[A-Za-z\\s]+$/.test(name)) {\n      return \"Name should contain only letters and spaces\";\n    }\n    return \"\";\n  };\n  const validateExpiryDate = date => {\n    // Check format (MM/YY)\n    if (!/^\\d{2}\\/\\d{2}$/.test(date)) {\n      return \"Expiry date must be in MM/YY format\";\n    }\n    const [month, year] = date.split('/');\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear() % 100; // Get last two digits of year\n    const currentMonth = currentDate.getMonth() + 1; // January is 0\n\n    // Check if month is valid (1-12)\n    if (parseInt(month) < 1 || parseInt(month) > 12) {\n      return \"Month must be between 01 and 12\";\n    }\n\n    // Check if card is not expired\n    if (parseInt(year) < currentYear || parseInt(year) === currentYear && parseInt(month) < currentMonth) {\n      return \"Card is expired\";\n    }\n    return \"\";\n  };\n  const validateCVV = cvv => {\n    // CVV should be 3 or 4 digits\n    if (!/^\\d{3,4}$/.test(cvv)) {\n      return \"CVV must be 3 or 4 digits\";\n    }\n    return \"\";\n  };\n  const validateForm = () => {\n    const newErrors = {\n      cardNumber: validateCardNumber(formData.cardNumber),\n      cardHolder: validateCardHolder(formData.cardHolder),\n      expiryDate: validateExpiryDate(formData.expiryDate),\n      cvv: validateCVV(formData.cvv)\n    };\n    setErrors(newErrors);\n\n    // Form is valid if there are no error messages\n    const valid = !Object.values(newErrors).some(error => error !== \"\");\n    setIsFormValid(valid);\n    return valid;\n  };\n\n  // Format credit card number as user types (add spaces every 4 digits)\n  const formatCardNumber = value => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    const matches = v.match(/\\d{4,16}/g);\n    const match = matches && matches[0] || '';\n    const parts = [];\n    for (let i = 0; i < match.length; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    if (parts.length) {\n      return parts.join(' ');\n    } else {\n      return value;\n    }\n  };\n\n  // Format expiry date as user types (MM/YY)\n  const formatExpiryDate = value => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    if (v.length >= 2) {\n      return v.slice(0, 2) + (v.length > 2 ? '/' + v.slice(2, 4) : '');\n    }\n    return v;\n  };\n\n  // Handle input changes with formatting\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n\n    // Apply formatting based on field type\n    if (name === \"cardNumber\") {\n      value = formatCardNumber(value);\n    } else if (name === \"expiryDate\") {\n      value = formatExpiryDate(value);\n    } else if (name === \"cvv\") {\n      // Ensure CVV is only digits and limit length to 4\n      value = value.replace(/\\D/g, '').slice(0, 4);\n    }\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Add or update a credit card\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Final validation before submitting\n    if (!validateForm()) {\n      return;\n    }\n    const method = editingCardId ? \"PUT\" : \"POST\";\n    const url = editingCardId ? `${API_BASE_URL}/${editingCardId}` : API_BASE_URL;\n\n    // Prepare data for submission (remove spaces from card number)\n    const submissionData = {\n      ...formData,\n      cardNumber: formData.cardNumber.replace(/\\s/g, ''),\n      userId\n    };\n    fetch(url, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(submissionData)\n    }).then(res => res.json()).then(() => {\n      // Reset form\n      setFormData({\n        cardNumber: \"\",\n        cardHolder: \"\",\n        expiryDate: \"\",\n        cvv: \"\"\n      });\n      setEditingCardId(null);\n      // Refresh cards list\n      return fetch(`${API_BASE_URL}/${userId}`).then(res => res.json());\n    }).then(data => setCards(data)).catch(err => console.error(\"Error saving credit card:\", err));\n  };\n\n  // Edit credit card\n  const handleEdit = card => {\n    // Format card number with spaces for display\n    const formattedCardNumber = card.cardNumber.replace(/(\\d{4})(?=\\d)/g, '$1 ');\n    setFormData({\n      cardNumber: formattedCardNumber,\n      cardHolder: card.cardHolder,\n      expiryDate: card.expiryDate,\n      cvv: card.cvv\n    });\n    setEditingCardId(card._id);\n  };\n\n  // Delete credit card\n  const handleDelete = cardId => {\n    if (window.confirm(\"Are you sure you want to delete this card?\")) {\n      fetch(`${API_BASE_URL}/${cardId}`, {\n        method: \"DELETE\"\n      }).then(() => fetch(`${API_BASE_URL}/${userId}`).then(res => res.json())).then(data => setCards(data)).catch(err => console.error(\"Error deleting credit card:\", err));\n    }\n  };\n\n  // Detect card type based on first digits\n  const getCardType = number => {\n    const cleanNumber = number.replace(/[\\s-]/g, '');\n\n    // Basic card type detection based on first digits\n    if (/^4/.test(cleanNumber)) return \"Visa\";\n    if (/^5[1-5]/.test(cleanNumber)) return \"MasterCard\";\n    if (/^3[47]/.test(cleanNumber)) return \"American Express\";\n    if (/^6(?:011|5)/.test(cleanNumber)) return \"Discover\";\n    return \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-amber-700\",\n      children: \"My Saved Credit Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), cards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto mb-8\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border-collapse bg-white shadow-md rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-amber-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Card Holder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Expiry Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Card Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-3 text-left\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cards.map(card => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b hover:bg-amber-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: [\"**** **** **** \", card.cardNumber.slice(-4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: card.cardHolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: card.expiryDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3\",\n              children: getCardType(card.cardNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-3 space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(card),\n                className: \"px-3 py-1 bg-amber-500 text-white rounded hover:bg-amber-600\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(card._id),\n                className: \"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 37\n            }, this)]\n          }, card._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-amber-50 p-4 mb-8 rounded-lg text-center\",\n      children: \"No saved cards found. Add your first card below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4 text-amber-700\",\n        children: editingCardId ? \"Edit Credit Card\" : \"Add New Credit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardNumber\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cardNumber\",\n            name: \"cardNumber\",\n            placeholder: \"1234 5678 9012 3456\",\n            value: formData.cardNumber,\n            onChange: handleChange,\n            maxLength: \"19\",\n            className: `w-full px-3 py-2 border ${errors.cardNumber ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), errors.cardNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-xs mt-1\",\n            children: errors.cardNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), formData.cardNumber && !errors.cardNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-600 text-xs mt-1\",\n            children: [\"Card Type: \", getCardType(formData.cardNumber)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cardHolder\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Card Holder Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cardHolder\",\n            name: \"cardHolder\",\n            placeholder: \"John Doe\",\n            value: formData.cardHolder,\n            onChange: handleChange,\n            className: `w-full px-3 py-2 border ${errors.cardHolder ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), errors.cardHolder && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-xs mt-1\",\n            children: errors.cardHolder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"expiryDate\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Expiry Date (MM/YY)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"expiryDate\",\n              name: \"expiryDate\",\n              placeholder: \"01/25\",\n              value: formData.expiryDate,\n              onChange: handleChange,\n              maxLength: \"5\",\n              className: `w-full px-3 py-2 border ${errors.expiryDate ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this), errors.expiryDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs mt-1\",\n              children: errors.expiryDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cvv\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"CVV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"cvv\",\n              name: \"cvv\",\n              placeholder: \"123\",\n              value: formData.cvv,\n              onChange: handleChange,\n              maxLength: \"4\",\n              className: `w-full px-3 py-2 border ${errors.cvv ? 'border-red-500' : 'border-gray-300'} rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this), errors.cvv && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-xs mt-1\",\n              children: errors.cvv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !isFormValid,\n          className: \"w-full bg-amber-600 text-white py-2 px-4 rounded-md hover:bg-amber-700 transition-colors disabled:bg-amber-300 disabled:cursor-not-allowed\",\n          children: editingCardId ? \"Update Card\" : \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this), editingCardId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setFormData({\n              cardNumber: \"\",\n              cardHolder: \"\",\n              expiryDate: \"\",\n              cvv: \"\"\n            });\n            setEditingCardId(null);\n          },\n          className: \"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors mt-2\",\n          children: \"Cancel Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n};\n_s(CreditCardPage, \"BtUAX6V0yPyx7EBy0oHBt3QvKpI=\");\n_c = CreditCardPage;\nexport default CreditCardPage;\nvar _c;\n$RefreshReg$(_c, \"CreditCardPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreditCardPage","_s","userId","sessionStorage","getItem","cards","setCards","formData","setFormData","cardNumber","cardHolder","expiryDate","cvv","errors","setErrors","editingCardId","setEditingCardId","isFormValid","setIsFormValid","API_BASE_URL","fetch","then","res","ok","Error","status","json","data","catch","err","console","error","validateForm","validateCardNumber","number","cleanNumber","replace","test","length","sum","shouldDouble","i","digit","parseInt","charAt","validateCardHolder","name","trim","nameWords","split","validateExpiryDate","date","month","year","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","validateCVV","newErrors","valid","Object","values","some","formatCardNumber","value","v","matches","match","parts","push","substring","join","formatExpiryDate","slice","handleChange","e","target","handleSubmit","preventDefault","method","url","submissionData","headers","body","JSON","stringify","handleEdit","card","formattedCardNumber","_id","handleDelete","cardId","window","confirm","getCardType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSubmit","htmlFor","type","id","placeholder","onChange","maxLength","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vishw/OneDrive/Documents/GitHub/spicesense/front-end/src/pages/CreditCardPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CreditCardPage = () => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [formData, setFormData] = useState({ \r\n        cardNumber: \"\", \r\n        cardHolder: \"\", \r\n        expiryDate: \"\", \r\n        cvv: \"\" \r\n    });\r\n    const [errors, setErrors] = useState({\r\n        cardNumber: \"\",\r\n        cardHolder: \"\",\r\n        expiryDate: \"\",\r\n        cvv: \"\"\r\n    });\r\n    const [editingCardId, setEditingCardId] = useState(null);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const API_BASE_URL = \"http://localhost:5000/api/credit-cards\";\r\n\r\n    // Fetch user's credit cards\r\n    useEffect(() => {\r\n        if (!userId) return;\r\n\r\n        fetch(`${API_BASE_URL}/${userId}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error(`HTTP error! Status: ${res.status}`);\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => setCards(data))\r\n            .catch(err => console.error(\"Error fetching credit cards:\", err));\r\n    }, [userId]);\r\n\r\n    // Validate form on data change\r\n    useEffect(() => {\r\n        validateForm();\r\n    }, [formData]);\r\n\r\n    // Validation functions\r\n    const validateCardNumber = (number) => {\r\n        // Remove spaces and dashes\r\n        const cleanNumber = number.replace(/[\\s-]/g, '');\r\n        \r\n        // Check if it contains only digits\r\n        if (!/^\\d+$/.test(cleanNumber)) {\r\n            return \"Card number must contain only digits\";\r\n        }\r\n        \r\n        // Check length (most cards are 13-19 digits)\r\n        if (cleanNumber.length < 13 || cleanNumber.length > 19) {\r\n            return \"Card number must be between 13 and 19 digits\";\r\n        }\r\n\r\n        // Luhn algorithm for credit card validation\r\n        let sum = 0;\r\n        let shouldDouble = false;\r\n        \r\n        // Loop through values starting from the rightmost digit\r\n        for (let i = cleanNumber.length - 1; i >= 0; i--) {\r\n            let digit = parseInt(cleanNumber.charAt(i));\r\n\r\n            if (shouldDouble) {\r\n                digit *= 2;\r\n                if (digit > 9) {\r\n                    digit -= 9;\r\n                }\r\n            }\r\n\r\n            sum += digit;\r\n            shouldDouble = !shouldDouble;\r\n        }\r\n\r\n        // If the sum is not divisible by 10, the card number is invalid\r\n        if (sum % 10 !== 0) {\r\n            return \"Invalid card number\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const validateCardHolder = (name) => {\r\n        if (!name.trim()) {\r\n            return \"Cardholder name is required\";\r\n        }\r\n        \r\n        // Check if name contains at least two words (first and last name)\r\n        const nameWords = name.trim().split(/\\s+/);\r\n        if (nameWords.length < 2) {\r\n            return \"Please enter both first and last name\";\r\n        }\r\n        \r\n        // Check if name contains only letters and spaces\r\n        if (!/^[A-Za-z\\s]+$/.test(name)) {\r\n            return \"Name should contain only letters and spaces\";\r\n        }\r\n        \r\n        return \"\";\r\n    };\r\n\r\n    const validateExpiryDate = (date) => {\r\n        // Check format (MM/YY)\r\n        if (!/^\\d{2}\\/\\d{2}$/.test(date)) {\r\n            return \"Expiry date must be in MM/YY format\";\r\n        }\r\n        \r\n        const [month, year] = date.split('/');\r\n        const currentDate = new Date();\r\n        const currentYear = currentDate.getFullYear() % 100; // Get last two digits of year\r\n        const currentMonth = currentDate.getMonth() + 1; // January is 0\r\n        \r\n        // Check if month is valid (1-12)\r\n        if (parseInt(month) < 1 || parseInt(month) > 12) {\r\n            return \"Month must be between 01 and 12\";\r\n        }\r\n        \r\n        // Check if card is not expired\r\n        if ((parseInt(year) < currentYear) || \r\n            (parseInt(year) === currentYear && parseInt(month) < currentMonth)) {\r\n            return \"Card is expired\";\r\n        }\r\n        \r\n        return \"\";\r\n    };\r\n\r\n    const validateCVV = (cvv) => {\r\n        // CVV should be 3 or 4 digits\r\n        if (!/^\\d{3,4}$/.test(cvv)) {\r\n            return \"CVV must be 3 or 4 digits\";\r\n        }\r\n        \r\n        return \"\";\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {\r\n            cardNumber: validateCardNumber(formData.cardNumber),\r\n            cardHolder: validateCardHolder(formData.cardHolder),\r\n            expiryDate: validateExpiryDate(formData.expiryDate),\r\n            cvv: validateCVV(formData.cvv)\r\n        };\r\n        \r\n        setErrors(newErrors);\r\n        \r\n        // Form is valid if there are no error messages\r\n        const valid = !Object.values(newErrors).some(error => error !== \"\");\r\n        setIsFormValid(valid);\r\n        \r\n        return valid;\r\n    };\r\n\r\n    // Format credit card number as user types (add spaces every 4 digits)\r\n    const formatCardNumber = (value) => {\r\n        const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\r\n        const matches = v.match(/\\d{4,16}/g);\r\n        const match = matches && matches[0] || '';\r\n        const parts = [];\r\n\r\n        for (let i = 0; i < match.length; i += 4) {\r\n            parts.push(match.substring(i, i + 4));\r\n        }\r\n\r\n        if (parts.length) {\r\n            return parts.join(' ');\r\n        } else {\r\n            return value;\r\n        }\r\n    };\r\n\r\n    // Format expiry date as user types (MM/YY)\r\n    const formatExpiryDate = (value) => {\r\n        const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\r\n        \r\n        if (v.length >= 2) {\r\n            return v.slice(0, 2) + (v.length > 2 ? '/' + v.slice(2, 4) : '');\r\n        }\r\n        \r\n        return v;\r\n    };\r\n\r\n    // Handle input changes with formatting\r\n    const handleChange = (e) => {\r\n        let { name, value } = e.target;\r\n        \r\n        // Apply formatting based on field type\r\n        if (name === \"cardNumber\") {\r\n            value = formatCardNumber(value);\r\n        } else if (name === \"expiryDate\") {\r\n            value = formatExpiryDate(value);\r\n        } else if (name === \"cvv\") {\r\n            // Ensure CVV is only digits and limit length to 4\r\n            value = value.replace(/\\D/g, '').slice(0, 4);\r\n        }\r\n        \r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    // Add or update a credit card\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Final validation before submitting\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n        \r\n        const method = editingCardId ? \"PUT\" : \"POST\";\r\n        const url = editingCardId ? `${API_BASE_URL}/${editingCardId}` : API_BASE_URL;\r\n\r\n        // Prepare data for submission (remove spaces from card number)\r\n        const submissionData = {\r\n            ...formData,\r\n            cardNumber: formData.cardNumber.replace(/\\s/g, ''),\r\n            userId\r\n        };\r\n\r\n        fetch(url, {\r\n            method,\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(submissionData),\r\n        })\r\n            .then(res => res.json())\r\n            .then(() => {\r\n                // Reset form\r\n                setFormData({ cardNumber: \"\", cardHolder: \"\", expiryDate: \"\", cvv: \"\" });\r\n                setEditingCardId(null);\r\n                // Refresh cards list\r\n                return fetch(`${API_BASE_URL}/${userId}`).then(res => res.json());\r\n            })\r\n            .then(data => setCards(data))\r\n            .catch(err => console.error(\"Error saving credit card:\", err));\r\n    };\r\n\r\n    // Edit credit card\r\n    const handleEdit = (card) => {\r\n        // Format card number with spaces for display\r\n        const formattedCardNumber = card.cardNumber.replace(/(\\d{4})(?=\\d)/g, '$1 ');\r\n        \r\n        setFormData({ \r\n            cardNumber: formattedCardNumber, \r\n            cardHolder: card.cardHolder, \r\n            expiryDate: card.expiryDate, \r\n            cvv: card.cvv \r\n        });\r\n        setEditingCardId(card._id);\r\n    };\r\n\r\n    // Delete credit card\r\n    const handleDelete = (cardId) => {\r\n        if (window.confirm(\"Are you sure you want to delete this card?\")) {\r\n            fetch(`${API_BASE_URL}/${cardId}`, { method: \"DELETE\" })\r\n                .then(() => fetch(`${API_BASE_URL}/${userId}`).then(res => res.json()))\r\n                .then(data => setCards(data))\r\n                .catch(err => console.error(\"Error deleting credit card:\", err));\r\n        }\r\n    };\r\n\r\n    // Detect card type based on first digits\r\n    const getCardType = (number) => {\r\n        const cleanNumber = number.replace(/[\\s-]/g, '');\r\n        \r\n        // Basic card type detection based on first digits\r\n        if (/^4/.test(cleanNumber)) return \"Visa\";\r\n        if (/^5[1-5]/.test(cleanNumber)) return \"MasterCard\";\r\n        if (/^3[47]/.test(cleanNumber)) return \"American Express\";\r\n        if (/^6(?:011|5)/.test(cleanNumber)) return \"Discover\";\r\n        return \"Unknown\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-6 text-amber-700\">My Saved Credit Cards</h2>\r\n            \r\n            {cards.length > 0 ? (\r\n                <div className=\"overflow-x-auto mb-8\">\r\n                    <table className=\"w-full border-collapse bg-white shadow-md rounded-lg\">\r\n                        <thead>\r\n                            <tr className=\"bg-amber-100\">\r\n                                <th className=\"p-3 text-left\">Card Number</th>\r\n                                <th className=\"p-3 text-left\">Card Holder</th>\r\n                                <th className=\"p-3 text-left\">Expiry Date</th>\r\n                                <th className=\"p-3 text-left\">Card Type</th>\r\n                                <th className=\"p-3 text-left\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {cards.map(card => (\r\n                                <tr key={card._id} className=\"border-b hover:bg-amber-50\">\r\n                                    <td className=\"p-3\">**** **** **** {card.cardNumber.slice(-4)}</td>\r\n                                    <td className=\"p-3\">{card.cardHolder}</td>\r\n                                    <td className=\"p-3\">{card.expiryDate}</td>\r\n                                    <td className=\"p-3\">{getCardType(card.cardNumber)}</td>\r\n                                    <td className=\"p-3 space-x-2\">\r\n                                        <button \r\n                                            onClick={() => handleEdit(card)}\r\n                                            className=\"px-3 py-1 bg-amber-500 text-white rounded hover:bg-amber-600\"\r\n                                        >\r\n                                            Edit\r\n                                        </button>\r\n                                        <button \r\n                                            onClick={() => handleDelete(card._id)}\r\n                                            className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ) : (\r\n                <div className=\"bg-amber-50 p-4 mb-8 rounded-lg text-center\">\r\n                    No saved cards found. Add your first card below.\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n                <h3 className=\"text-xl font-semibold mb-4 text-amber-700\">\r\n                    {editingCardId ? \"Edit Credit Card\" : \"Add New Credit Card\"}\r\n                </h3>\r\n                \r\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                        <label htmlFor=\"cardNumber\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Card Number\r\n                        </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"cardNumber\"\r\n                            name=\"cardNumber\" \r\n                            placeholder=\"1234 5678 9012 3456\" \r\n                            value={formData.cardNumber} \r\n                            onChange={handleChange} \r\n                            maxLength=\"19\"\r\n                            className={`w-full px-3 py-2 border ${\r\n                                errors.cardNumber ? 'border-red-500' : 'border-gray-300'\r\n                            } rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`}\r\n                        />\r\n                        {errors.cardNumber && (\r\n                            <p className=\"text-red-500 text-xs mt-1\">{errors.cardNumber}</p>\r\n                        )}\r\n                        {formData.cardNumber && !errors.cardNumber && (\r\n                            <p className=\"text-green-600 text-xs mt-1\">\r\n                                Card Type: {getCardType(formData.cardNumber)}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                    \r\n                    <div className=\"space-y-2\">\r\n                        <label htmlFor=\"cardHolder\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Card Holder Name\r\n                        </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"cardHolder\"\r\n                            name=\"cardHolder\" \r\n                            placeholder=\"John Doe\" \r\n                            value={formData.cardHolder} \r\n                            onChange={handleChange} \r\n                            className={`w-full px-3 py-2 border ${\r\n                                errors.cardHolder ? 'border-red-500' : 'border-gray-300'\r\n                            } rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`}\r\n                        />\r\n                        {errors.cardHolder && (\r\n                            <p className=\"text-red-500 text-xs mt-1\">{errors.cardHolder}</p>\r\n                        )}\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div className=\"space-y-2\">\r\n                            <label htmlFor=\"expiryDate\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Expiry Date (MM/YY)\r\n                            </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"expiryDate\"\r\n                                name=\"expiryDate\" \r\n                                placeholder=\"01/25\" \r\n                                value={formData.expiryDate} \r\n                                onChange={handleChange} \r\n                                maxLength=\"5\"\r\n                                className={`w-full px-3 py-2 border ${\r\n                                    errors.expiryDate ? 'border-red-500' : 'border-gray-300'\r\n                                } rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`}\r\n                            />\r\n                            {errors.expiryDate && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">{errors.expiryDate}</p>\r\n                            )}\r\n                        </div>\r\n                        \r\n                        <div className=\"space-y-2\">\r\n                            <label htmlFor=\"cvv\" className=\"block text-sm font-medium text-gray-700\">\r\n                                CVV\r\n                            </label>\r\n                            <input \r\n                                type=\"text\" \r\n                                id=\"cvv\"\r\n                                name=\"cvv\" \r\n                                placeholder=\"123\" \r\n                                value={formData.cvv} \r\n                                onChange={handleChange} \r\n                                maxLength=\"4\"\r\n                                className={`w-full px-3 py-2 border ${\r\n                                    errors.cvv ? 'border-red-500' : 'border-gray-300'\r\n                                } rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500`}\r\n                            />\r\n                            {errors.cvv && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">{errors.cvv}</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <button \r\n                        type=\"submit\" \r\n                        disabled={!isFormValid}\r\n                        className=\"w-full bg-amber-600 text-white py-2 px-4 rounded-md hover:bg-amber-700 transition-colors disabled:bg-amber-300 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {editingCardId ? \"Update Card\" : \"Add Card\"}\r\n                    </button>\r\n                    \r\n                    {editingCardId && (\r\n                        <button \r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                setFormData({ cardNumber: \"\", cardHolder: \"\", expiryDate: \"\", cvv: \"\" });\r\n                                setEditingCardId(null);\r\n                            }}\r\n                            className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors mt-2\"\r\n                        >\r\n                            Cancel Edit\r\n                        </button>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreditCardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}